name: Fetch Instagram (Graph API)

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Sync with remote
        run: |
          git fetch origin
          git reset --hard origin/main

      - name: Verify IG access token
        env:
          IG_ACCESS_TOKEN: ${{ secrets.IG_ACCESS_TOKEN }}
        run: |
          set -eux
          echo "Checking token owner (me):"
          curl -s "https://graph.facebook.com/v24.0/me?access_token=${IG_ACCESS_TOKEN}" | jq .

      - name: Fetch Instagram media via Graph API
        env:
          IG_USER_ID: ${{ secrets.IG_USER_ID }}
          IG_ACCESS_TOKEN: ${{ secrets.IG_ACCESS_TOKEN }}
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y jq
          mkdir -p data
          # Fetch and capture HTTP status
          URL="https://graph.facebook.com/v24.0/${IG_USER_ID}/media?fields=id,caption,media_type,media_url,thumbnail_url,permalink,timestamp,children{media_url,thumbnail_url,media_type}&limit=6&access_token=${IG_ACCESS_TOKEN}"
          http_code=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
          if [ "$http_code" -ne 200 ]; then
            echo "Graph API returned HTTP $http_code";
            exit 1;
          fi
          curl -s "$URL" -o data/instagram-raw.json
          # Use jq to transform the raw response into the minimal JSON our site expects
          jq '{items: .data | map({id: .id, caption: (.caption // ""), image: (if .media_type == "VIDEO" then (.thumbnail_url // .media_url) elif .media_type == "CAROUSEL_ALBUM" then (.children.data[0].media_url // .media_url // .thumbnail_url) else .media_url end), link: .permalink, timestamp: .timestamp}) | sort_by(.timestamp) | reverse | .[:3]}' data/instagram-raw.json > data/instagram.json

      - name: Commit & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/instagram.json
          git commit -m "Update Instagram feed" || echo "No changes to commit"
          git push
